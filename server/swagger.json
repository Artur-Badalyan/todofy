{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Login-Registration-Groups APIs",
    "description": "This is information about the following project APIs",
    "license": {}
  },
  "host": "localhost:8008",
  "basePath": "/",
  "tags": [{
    "name": "Users",
    "description": "API for users in the system"
  }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Login user in system",
        "parameters": [
          {
            "name": "User",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login user",
            "schema": {
              "$ref": "#/definitions/loginOk"
            }
          },
          "401": {
            "description": "401 Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/signup": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/signup"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/signupOk"
            }
          },
          "401": {
            "description": "401 Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/userProfile": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Login user in system",
        "parameters": [
          {
            "name": "User",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/userProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login user",
            "schema": {
              "$ref": "#/definitions/userProfileOk"
            }
          },
          "400": {
            "description": "Response to the request for an expired token",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "login": {
      "required": [
        "userName",
        "password"
      ],
      "properties":{
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "minimum": 8
        }
      }
    },
    "loginOk": {
      "required": [
        "status",
        "data"
      ],
      "properties":{
        "status": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "properties":{
            "token":{
              "type": "string"
            }
          }
        }
      }
    },
    "signup": {
      "required": [
        "userName",
        "email",
        "password"
      ],
      "properties":{
        "userName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "minimum": 8
        }
      }
    },
    "signupOk": {
      "required": [
        "status"
      ],
      "properties":{
        "status": {
          "type": "string"
        }
      }
    },
    "userProfile": {
      "required": [
        "token"
      ],
      "properties":{
        "token": {
          "type": "string"
        }
      }
    },
    "userProfileOk": {
      "required": [
        "data"
      ],
      "properties":{
        "data": {
          "type": "object",
          "properties":{
            "userName":{
              "type": "string"
            },
            "email":{
              "type": "string"
            }
          }
        }
      }
    },
    "Error": {
      "properties": {
        "status": {
          "type": "string"
        }
      }
    }
  }
}
